jobs:
  build_and_test:
    docker:
      - image: circleci/elixir:1.10.2-node
        environment:
          MIX_ENV: test
      - image: circleci/postgres:12.2
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: my_app_test
          POSTGRES_PASSWORD: postgres
    steps:
      - checkout
      - run:
          name: Install Hex
          command: mix local.hex --force
      - run:
          name: Install Rebar
          command: mix local.rebar --force
      - restore_cache:
          keys:
            - mix-v1-{{ .Branch }}-{{ checksum "mix.lock" }}
            - mix-v1-{{ .Branch }}
            - mix-v1
      - run:
          name: Install Mix's dependencies
          command: mix deps.get
      - save_cache:
          key: mix-v1-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths: deps
      - restore_cache:
          keys:
            - build-v1-{{ .Branch }}
            - build-v1-
      - run:
          name: Compile Elixir's source files
          command: mix compile
      - save_cache:
          key: build-v1-{{ .Branch }}
          paths: _build
      - restore_cache:
          keys:
            - npm-v1-{{ checksum "assets/package-lock.json" }}
            - npm-v1-
      - run:
          name: Install Node.js's modules
          command: cd assets && npm install
      - save_cache:
          key: npm-v1-{{ checksum "assets/package-lock.json" }}
          paths:
            - ~/assets/node_modules
      - run:
          name: Check that Elixir's source files are formatted
          command: mix format --check-formatted
      - run:
          name: Wait for database
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Run Elixir's tests
          command: mix test
      - store_test_results:
          path: _build/test/lib/my_app

  build_release:
    docker:
      - image: circleci/elixir:1.10.2-node
        environment:
          MIX_ENV: prod
    steps:
      - checkout
      - run:
          name: Install Hex
          command: mix local.hex --force
      - run:
          name: Install Rebar
          command: mix local.rebar --force
      - restore_cache:
          keys:
            - mix-v1-{{ .Branch }}-{{ checksum "mix.lock" }}
            - mix-v1-{{ .Branch }}
            - mix-v1
      - run:
          name: Install Mix's dependencies
          command: mix deps.get --only prod
      - save_cache:
          key: mix-v1-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths: deps
      - restore_cache:
          keys:
            - build-v1-{{ .Branch }}
            - build-v1-
      - run:
          name: Compile Elixir's source files
          command: mix compile
      - save_cache:
          key: build-v1-{{ .Branch }}
          paths: _build
      - restore_cache:
          keys:
            - npm-v1-{{ checksum "assets/package-lock.json" }}
            - npm-v1-
      - run:
          name: Install Node.js's modules
          command: cd assets && npm install
      - save_cache:
          key: npm-v1-{{ checksum "assets/package-lock.json" }}
          paths:
            - ~/assets/node_modules
      - run:
          name: Compile assets
          command: npm run deploy --prefix ./assets
      - run:
          name: Digests and compresses static files
          command: mix phx.digest
      - run:
          name: Assemble a self-contained release
          command: mix release

workflows:
  version: 2
  build_test_release:
    jobs:
      - build_and_test
      - build_release:
          requires:
            - build_and_test
